version: '3.8'


services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    env_file:
      - ./frontend/.env
      
    ports:
      - "3001:80"
    
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod

    depends_on:
      postgres:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    env_file:
      - ./backend/.env
    ports:
      - "8081:8080"

  web-socket:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    
    depends_on:
      qdrant:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    
    command: ["sh", "-c","bun run socket"]

    env_file:
      - ./backend/.env
    ports:
      - "4001:4000"
    

  postgres:
    image: postgres:alpine
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=mysupersecretpassword
    healthcheck:                      
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      timeout: 5s

  qdrant:
    image: qdrant/qdrant
    volumes:
      - "qdrant_data:/qdrant/storage"
    environment:
      - QDRANT_URL=http://localhost:6333
    ports:
      - "6333:6333"
    healthcheck:                      
      test: ["CMD-SHELL", "timeout 1 bash -c '</dev/tcp/localhost/6333' || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:6.2-alpine
    environment:
      - REDIS_URL=redis://localhost:6379
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s 
      timeout: 3s  
      retries: 5   
      start_period: 10s 

volumes:
  postgres_data:
  qdrant_data: